// Generated by view binder compiler. Do not edit!
package com.monika.smartreaders.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.monika.smartreaders.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCustomDashboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final ImageView CE;

  @NonNull
  public final ImageView bsection;

  @NonNull
  public final ImageView chatbot;

  @NonNull
  public final LinearLayout icons;

  @NonNull
  public final RecyclerView latestRecycler;

  @NonNull
  public final ImageView news;

  @NonNull
  public final RecyclerView recentlyViewed;

  @NonNull
  public final TextView recenttext;

  @NonNull
  public final TextView tagline;

  private ActivityCustomDashboardBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull ImageView CE, @NonNull ImageView bsection, @NonNull ImageView chatbot,
      @NonNull LinearLayout icons, @NonNull RecyclerView latestRecycler, @NonNull ImageView news,
      @NonNull RecyclerView recentlyViewed, @NonNull TextView recenttext,
      @NonNull TextView tagline) {
    this.rootView = rootView;
    this.CE = CE;
    this.bsection = bsection;
    this.chatbot = chatbot;
    this.icons = icons;
    this.latestRecycler = latestRecycler;
    this.news = news;
    this.recentlyViewed = recentlyViewed;
    this.recenttext = recenttext;
    this.tagline = tagline;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustomDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustomDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_custom_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustomDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CE;
      ImageView CE = rootView.findViewById(id);
      if (CE == null) {
        break missingId;
      }

      id = R.id.bsection;
      ImageView bsection = rootView.findViewById(id);
      if (bsection == null) {
        break missingId;
      }

      id = R.id.chatbot;
      ImageView chatbot = rootView.findViewById(id);
      if (chatbot == null) {
        break missingId;
      }

      id = R.id.icons;
      LinearLayout icons = rootView.findViewById(id);
      if (icons == null) {
        break missingId;
      }

      id = R.id.latest_recycler;
      RecyclerView latestRecycler = rootView.findViewById(id);
      if (latestRecycler == null) {
        break missingId;
      }

      id = R.id.news;
      ImageView news = rootView.findViewById(id);
      if (news == null) {
        break missingId;
      }

      id = R.id.recentlyViewed;
      RecyclerView recentlyViewed = rootView.findViewById(id);
      if (recentlyViewed == null) {
        break missingId;
      }

      id = R.id.recenttext;
      TextView recenttext = rootView.findViewById(id);
      if (recenttext == null) {
        break missingId;
      }

      id = R.id.tagline;
      TextView tagline = rootView.findViewById(id);
      if (tagline == null) {
        break missingId;
      }

      return new ActivityCustomDashboardBinding((LinearLayoutCompat) rootView, CE, bsection,
          chatbot, icons, latestRecycler, news, recentlyViewed, recenttext, tagline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
